<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bones.mapper.TestContentMapper">
  <resultMap id="BaseResultMap" type="com.bones.pojo.TestContent">
    <result column="question" jdbcType="VARCHAR" property="question" />
    <result column="choiceA" jdbcType="VARCHAR" property="choicea" />
    <result column="choiceB" jdbcType="VARCHAR" property="choiceb" />
    <result column="answer" jdbcType="VARCHAR" property="answer" />
    <result column="point" jdbcType="VARCHAR" property="point" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    question, choiceA, choiceB, answer, point, course_id
  </sql>
  <select id="selectByExample" parameterType="com.bones.pojo.TestContentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from testcontent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.bones.pojo.TestContentExample">
    delete from testcontent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bones.pojo.TestContent">
    insert into testcontent (question, choiceA, choiceB, 
      answer, point, course_id
      )
    values (#{question,jdbcType=VARCHAR}, #{choicea,jdbcType=VARCHAR}, #{choiceb,jdbcType=VARCHAR}, 
      #{answer,jdbcType=VARCHAR}, #{point,jdbcType=VARCHAR}, #{courseId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bones.pojo.TestContent">
    insert into testcontent
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="question != null">
        question,
      </if>
      <if test="choicea != null">
        choiceA,
      </if>
      <if test="choiceb != null">
        choiceB,
      </if>
      <if test="answer != null">
        answer,
      </if>
      <if test="point != null">
        point,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="question != null">
        #{question,jdbcType=VARCHAR},
      </if>
      <if test="choicea != null">
        #{choicea,jdbcType=VARCHAR},
      </if>
      <if test="choiceb != null">
        #{choiceb,jdbcType=VARCHAR},
      </if>
      <if test="answer != null">
        #{answer,jdbcType=VARCHAR},
      </if>
      <if test="point != null">
        #{point,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bones.pojo.TestContentExample" resultType="java.lang.Long">
    select count(*) from testcontent
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update testcontent
    <set>
      <if test="record.question != null">
        question = #{record.question,jdbcType=VARCHAR},
      </if>
      <if test="record.choicea != null">
        choiceA = #{record.choicea,jdbcType=VARCHAR},
      </if>
      <if test="record.choiceb != null">
        choiceB = #{record.choiceb,jdbcType=VARCHAR},
      </if>
      <if test="record.answer != null">
        answer = #{record.answer,jdbcType=VARCHAR},
      </if>
      <if test="record.point != null">
        point = #{record.point,jdbcType=VARCHAR},
      </if>
      <if test="record.courseId != null">
        course_id = #{record.courseId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update testcontent
    set question = #{record.question,jdbcType=VARCHAR},
      choiceA = #{record.choicea,jdbcType=VARCHAR},
      choiceB = #{record.choiceb,jdbcType=VARCHAR},
      answer = #{record.answer,jdbcType=VARCHAR},
      point = #{record.point,jdbcType=VARCHAR},
      course_id = #{record.courseId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>